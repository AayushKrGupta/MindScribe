package backend

import android.os.Parcelable
import androidx.room.Entity
import androidx.room.PrimaryKey
import com.example.mindscribe.R
import com.google.firebase.firestore.Exclude
import kotlinx.parcelize.Parcelize

@Parcelize
@Entity(tableName = "notes")
data class Note(
    // Room Primary Key (auto-generated for local DB)
    @PrimaryKey(autoGenerate = true)
    @Exclude // Exclude from Firestore as we'll use Firestore's auto-ID
    val localId: Int = 0,

    // Firestore ID (will be auto-generated by Firestore)
    var id: String = "",

    // User reference
    var userId: String = "",

    // Note content
    var noteTitle: String = "",
    var noteDesc: String = "",
    var timestamp: Long = System.currentTimeMillis(),

    // Media
    var imageUrls: List<String> = emptyList(),
    var audioPath: String? = null,

    // Status flags
    var isPinned: Boolean = false,
    var isArchived: Boolean = false,

    // Appearance
    var colorResId: Int = R.color.note_color_default
) : Parcelable {

    // Required empty constructor for Firestore
    constructor() : this(0, "", "", "", "", System.currentTimeMillis())
}